// Constants =================================
$color-main: #bdae82;
$color-light: #ffffff;
$color-gray: #c8c8c8;
$color-dark: #000000;
$color-lt-dark: #1c1c1c;

$wrapper-width: 1440px;
$content-width: 1400px;

// Placeholders ==============================

%font-add {
  font-family: 'Merriweather', Times, serif;
}

%trans {
  transition: all 0.25s ease-in-out;
}

%shadow {
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
}

%filter {
  filter: invert(19%) sepia(24%) saturate(424%) hue-rotate(7deg) brightness(84%) contrast(86%);
}

// Mixins ===================================

@mixin font($size, $height: $size * 2, $weight: bold, $color: inherit, $style: normal) {
  font-size: $size;
  line-height: $height;
  font-weight: $weight;
  font-style: $style;
  color: $color;
}

@mixin hov() {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

// Равномерное распределение колонок на основе ширины в процентах
// Gap не задан, он также рассчитывается в %
@mixin flex($width) {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  > * {
    flex-basis: calc($width / $content-width * 100%);
  }
}

// Если нужно точное количество колонок и точный gap
// Gap не будет уменьшаться, будет уменьшаться ширина колонок в %
@mixin cols($cols, $gap) {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: $gap;

  > * {
    flex-basis: calc((100% - ($cols - 1) * $gap) / $cols);
  }
}

@mixin fbasis($width, $container-width: $content-width) {
  flex-basis: calc(($width / $container-width) * 100%);
}

@mixin flex-col($pos: flex-start) {
  display: flex;
  flex-direction: column;
  align-items: $pos;
}

// media -------------------------------------------------

@mixin media-lap {
  @media (max-width: 1024px) {
    @content;
  }
}

@mixin media-tab {
  @media (max-width: 768px) {
    @content;
  }
}

@mixin media-mob {
  @media (max-width: 600px) {
    @content;
  }
}

@mixin media-mm {
  @media (max-width: 480px) {
    @content;
  }
}

@mixin media-sm {
  @media (max-width: 375px) {
    @content;
  }
}

@mixin media($width) {
  @media (max-width: $width) {
    @content;
  }
}
